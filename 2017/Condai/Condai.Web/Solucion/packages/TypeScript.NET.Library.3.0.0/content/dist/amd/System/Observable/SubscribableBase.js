/*!
 * @author electricessence / https://github.com/electricessence/
 * Based upon .NET source.
 * Licensing: MIT https://github.com/electricessence/TypeScript.NET/blob/master/LICENSE.md
 * Source: http://referencesource.microsoft.com/#mscorlib/system/IObserver.cs
 */
define(["require","exports","../Collections/LinkedNodeList","../Disposable/dispose","./Subscription","../Disposable/DisposableBase"],function(s,e,i,r,t,n){"use strict";var o=function(s){function e(){s.call(this)}return __extends(e,s),e.prototype._getSubscribers=function(){var s=this.__subscriptions;return s&&s.map(function(s){return s.value&&s.value.subscriber})},e.prototype._findEntryNode=function(s){var e=this.__subscriptions;return e&&e.find(function(e){return e.value.subscriber===s})},e.prototype.subscribe=function(s){var e=this;e.throwIfDisposed();var r=e._findEntryNode(s);if(r)return r.value;var n=e.__subscriptions;n||(e.__subscriptions=n=new i.LinkedNodeList);var o=new t.Subscription(e,s);return n.addNode({value:o}),o},e.prototype.unsubscribe=function(s){var e=this,i=e._findEntryNode(s);if(i){var r=i.value;e.__subscriptions.removeNode(i),r.dispose()}},e.prototype._unsubscribeAll=function(s){void 0===s&&(s=!1);var e=this,i=e.__subscriptions;if(!i)return null;var t=i.map(function(s){return s.value}),n=s?t.map(function(s){return s.subscriber}):null;return i.clear(),r.dispose.these(t),n},e.prototype.unsubscribeAll=function(){this._unsubscribeAll()},e.prototype._onDispose=function(){s.prototype._onDispose.call(this),this._unsubscribeAll();var e=this.__subscriptions;this.__subscriptions=null,r.dispose(e)},e}(n.DisposableBase);e.SubscribableBase=o,Object.defineProperty(e,"__esModule",{value:!0}),e["default"]=o});
//# sourceMappingURL=SubscribableBase.js.map
